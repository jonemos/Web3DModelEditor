{
  "version": 3,
  "sources": ["../../three/examples/jsm/shaders/BrightnessContrastShader.js"],
  "sourcesContent": ["/**\r\n * Brightness and contrast adjustment\r\n * https://github.com/evanw/glfx.js\r\n * brightness: -1 to 1 (-1 is solid black, 0 is no change, and 1 is solid white)\r\n * contrast: -1 to 1 (-1 is solid gray, 0 is no change, and 1 is maximum contrast)\r\n */\r\n\r\nconst BrightnessContrastShader = {\r\n\r\n\tname: 'BrightnessContrastShader',\r\n\r\n\tuniforms: {\r\n\r\n\t\t'tDiffuse': { value: null },\r\n\t\t'brightness': { value: 0 },\r\n\t\t'contrast': { value: 0 }\r\n\r\n\t},\r\n\r\n\tvertexShader: /* glsl */`\r\n\r\n\t\tvarying vec2 vUv;\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tvUv = uv;\r\n\r\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t\t}`,\r\n\r\n\tfragmentShader: /* glsl */`\r\n\r\n\t\tuniform sampler2D tDiffuse;\r\n\t\tuniform float brightness;\r\n\t\tuniform float contrast;\r\n\r\n\t\tvarying vec2 vUv;\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tgl_FragColor = texture2D( tDiffuse, vUv );\r\n\r\n\t\t\tgl_FragColor.rgb += brightness;\r\n\r\n\t\t\tif (contrast > 0.0) {\r\n\t\t\t\tgl_FragColor.rgb = (gl_FragColor.rgb - 0.5) / (1.0 - contrast) + 0.5;\r\n\t\t\t} else {\r\n\t\t\t\tgl_FragColor.rgb = (gl_FragColor.rgb - 0.5) * (1.0 + contrast) + 0.5;\r\n\t\t\t}\r\n\r\n\t\t}`\r\n\r\n};\r\n\r\nexport { BrightnessContrastShader };\r\n"],
  "mappings": ";;;AAOA,IAAM,2BAA2B;AAAA,EAEhC,MAAM;AAAA,EAEN,UAAU;AAAA,IAET,YAAY,EAAE,OAAO,KAAK;AAAA,IAC1B,cAAc,EAAE,OAAO,EAAE;AAAA,IACzB,YAAY,EAAE,OAAO,EAAE;AAAA,EAExB;AAAA,EAEA;AAAA;AAAA,IAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYxB;AAAA;AAAA,IAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsB3B;",
  "names": []
}
