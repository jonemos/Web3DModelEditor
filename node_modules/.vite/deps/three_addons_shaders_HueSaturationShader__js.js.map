{
  "version": 3,
  "sources": ["../../three/examples/jsm/shaders/HueSaturationShader.js"],
  "sourcesContent": ["/**\r\n * Hue and saturation adjustment\r\n * https://github.com/evanw/glfx.js\r\n * hue: -1 to 1 (-1 is 180 degrees in the negative direction, 0 is no change, etc.\r\n * saturation: -1 to 1 (-1 is solid gray, 0 is no change, and 1 is maximum contrast)\r\n */\r\n\r\nconst HueSaturationShader = {\r\n\r\n\tname: 'HueSaturationShader',\r\n\r\n\tuniforms: {\r\n\r\n\t\t'tDiffuse': { value: null },\r\n\t\t'hue': { value: 0 },\r\n\t\t'saturation': { value: 0 }\r\n\r\n\t},\r\n\r\n\tvertexShader: /* glsl */`\r\n\r\n\t\tvarying vec2 vUv;\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tvUv = uv;\r\n\r\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t\t}`,\r\n\r\n\tfragmentShader: /* glsl */`\r\n\r\n\t\tuniform sampler2D tDiffuse;\r\n\t\tuniform float hue;\r\n\t\tuniform float saturation;\r\n\r\n\t\tvarying vec2 vUv;\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tgl_FragColor = texture2D( tDiffuse, vUv );\r\n\r\n\t\t\t// hue\r\n\t\t\tfloat angle = hue * 3.14159265;\r\n\t\t\tfloat s = sin(angle), c = cos(angle);\r\n\t\t\tvec3 weights = (vec3(2.0 * c, -sqrt(3.0) * s - c, sqrt(3.0) * s - c) + 1.0) / 3.0;\r\n\t\t\tfloat len = length(gl_FragColor.rgb);\r\n\t\t\tgl_FragColor.rgb = vec3(\r\n\t\t\t\tdot(gl_FragColor.rgb, weights.xyz),\r\n\t\t\t\tdot(gl_FragColor.rgb, weights.zxy),\r\n\t\t\t\tdot(gl_FragColor.rgb, weights.yzx)\r\n\t\t\t);\r\n\r\n\t\t\t// saturation\r\n\t\t\tfloat average = (gl_FragColor.r + gl_FragColor.g + gl_FragColor.b) / 3.0;\r\n\t\t\tif (saturation > 0.0) {\r\n\t\t\t\tgl_FragColor.rgb += (average - gl_FragColor.rgb) * (1.0 - 1.0 / (1.001 - saturation));\r\n\t\t\t} else {\r\n\t\t\t\tgl_FragColor.rgb += (average - gl_FragColor.rgb) * (-saturation);\r\n\t\t\t}\r\n\r\n\t\t}`\r\n\r\n};\r\n\r\nexport { HueSaturationShader };\r\n"],
  "mappings": ";;;AAOA,IAAM,sBAAsB;AAAA,EAE3B,MAAM;AAAA,EAEN,UAAU;AAAA,IAET,YAAY,EAAE,OAAO,KAAK;AAAA,IAC1B,OAAO,EAAE,OAAO,EAAE;AAAA,IAClB,cAAc,EAAE,OAAO,EAAE;AAAA,EAE1B;AAAA,EAEA;AAAA;AAAA,IAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYxB;AAAA;AAAA,IAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiC3B;",
  "names": []
}
